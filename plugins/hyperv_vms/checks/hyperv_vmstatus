#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output from agent:
# <<<hyperv_vmstatus>>>
# Integration_Services Ok
# Replica_Health None

def inventory_hyperv_vmstatus(info):
    return [(None, None)]

def check_hyperv_vmstatus(_no_item, _no_params, info):
    int_status = ""
    rep = []
    integration = []
    component = []
    problems = []
    hosts = []
    rep_message = ""

    for element in info:
        if element[0] == 'Replica_Health' and len(element) >= 5:
            rep.append((element[4],element[1],element[2],element[3]))
        elif element[0] == 'Integration_Services':
            integration.append((element[1]))
        elif element[0] == 'Problems':
            problems.append((element[1]))
        elif element[0] == 'Host':
            hosts.append((element[1]))
        else:
            component.append((element))

    if len(hosts) > 1 and len(rep) >= 1:
        rep_status = 'Unknown'
        for r_host, r_state, r_health, r_mode in rep:
            if r_mode == 'Primary':
                running_on = r_host
                running_rep_status = r_state,
            elif r_mode == 'Replica':
                standby_on = r_host
                standby_rep_status = r_state,
            else:
                rep_status = 'Unknown'
        rep_message = "Not possible to find Replication Info"

        if running_rep_status[0] != 'Replicating' or standby_rep_status[0] != 'Replicating':
            rep_status = 'Problem (!)'
        else:
            rep_status = 'Ok'

        if rep_status != 'Unknown':
            rep_message = "Running on " + running_on + " and Standby on " + standby_on

    int_status = 'Ok'
    for status in integration:
        if status != 'Ok' and status != 'Stopped':
            int_status = 'Problem (!)'

    if len(rep) == 0:
        rep_status = 'Ok'

    if len(problems) >= 1:
        int_comp = ",".join(problems)
    else:
        int_comp =""

    if len(hosts) == 1:
        rep_message = rep_message + " - Host " + hosts[0]
    elif len(hosts) == 2 and len(rep) == 0:
        rep_message = rep_message + " - existing on two hosts without replication " + ",".join(hosts)

    if int_status != 'Ok' or rep_status != 'Ok':
        return 2, "Integration Services State: " + int_status + " Failed Components: " + int_comp +  " - Replication State " + rep_status + " " + rep_message
    else:
        return 0, "Integration Services State: " + int_status + " - Replication State " + rep_status + " " + rep_message

check_info["hyperv_vmstatus"] = {
    "check_function"        : check_hyperv_vmstatus,
    "inventory_function"    : inventory_hyperv_vmstatus,
    "service_description"   : "HyperV Status",
}

