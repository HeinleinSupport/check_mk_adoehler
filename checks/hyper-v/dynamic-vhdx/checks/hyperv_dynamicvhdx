#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Example output from agent:
#<<<hyperv_dynamicvhdx:sep(59)>>>
#server1.domain.de;disc1.vhdx;LUN06;
#server2.domain.de;disc2.vhdx;LUN02;

def inventory_hyperv_dynamicvhdx(info):
    if len(info) > 0:
        return [(None, None)]

def check_hyperv_dynamicvhdx(item, params, info):
    if len(info) == 0:
        return (0, "No Dynamic VHDX found")
    single_vhds = []
    info_text = ""
    for line in info:
        single_vhds.append( (line[0], line[1] ) )
    for x in single_vhds:
        temp_text = " - ".join([ x[0],x[1]])
        info_text = info_text + temp_text + "\n"
    return (1, "Dynamic VHDX found \n %s" % info_text )

check_info["hyperv_dynamicvhdx"] = {
    "check_function"        : check_hyperv_dynamicvhdx,
    "group"                 : "windows_hyperv",
    "inventory_function"    : inventory_hyperv_dynamicvhdx,
    "service_description"   : "Hyper-V Dynamic VHDX",
    "has_perfdata"          : False,
}