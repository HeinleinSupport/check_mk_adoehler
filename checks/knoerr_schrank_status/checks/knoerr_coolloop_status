#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
 
knoerr_coolloop_map = {
    1: "Fan1",
    2: "Fan2",
    3: "Fan3",
    4: "Water",
    5: "Smoke",
    6: "mainsA",
    7: "mainsB",
}
 
def inventory_knoerr_coolloop_status(info):
    if len(info) > 0:
        return [ (None, None) ]
 
def check_knoerr_coolloop_status(item, params, info):
    status = info[0]
    x = 1
    single_states = []
    for line in status:
        if saveint(line[0]) == 0:
            infotxt = "Sensor %s is OK" % knoerr_coolloop_map[int(x)]
            state = 0
        else:
            infotxt = "Sensor %s is CRIT(!!)" % knoerr_coolloop_map[int(x)]
            state = 2
        single_states.append( (state, infotxt) )
        x = x + 1
    worst_state = max([x[0] for x in single_states])
    info_text = ", ".join([x[1] for x in single_states])
    return(worst_state, info_text)
 
check_info['knoerr_coolloop_status'] = {
  "inventory_function"  : inventory_knoerr_coolloop_status,
  "check_function"      : check_knoerr_coolloop_status,
  "service_description" : "Enviroment",
  "has_perfdata"        : False,
  "group"               : "knoerr_coolloop_status",
  "snmp_info"           : ( ".1.3.6.1.4.1.2769.2.1.2.4", [ "1", "2", "3", "5", "6", "7", "8" ]),
  "snmp_scan_function"  : lambda oid: "coolcon" in oid(".1.3.6.1.2.1.1.1.0").lower()
}