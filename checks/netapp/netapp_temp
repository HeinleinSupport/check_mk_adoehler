#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

def inventory_netapp_temp(checkname, info):
    return [ (line[1]+" "+line[0], None) for line in info if line[1] <> '' ]

def check_netapp_temp(item, params, info):
    for line in info:
            if line[1]+" "+line[0] == item:
                ambient = saveint(line[3].split(' ')[0][:-1])
                warning = saveint(line[4].split(' ')[0][:-1])
                critical = saveint(line[5].split(' ')[0][:-1])
                perfdata = [ ( "temp", ambient, warning, critical ) ]
                shelftemp = str(line[3])
                shelferror = str(line[2])
                if (shelferror <> ""):
                    return (2, "CRITICAL - NetAPP Temperatur: %s" % shelftemp, perfdata)
                return (0, "OK - NetAPP Temperatur: %s" % shelftemp, perfdata)

check_info["netapp_temp"] = {
    "check_function"        : check_netapp_temp,
    "inventory_function"    : inventory_netapp_temp,
    "service_description"   : "NetApp ShelfTemp %s",
    "has_perfdata"          : True,
    "group"                 : "netapp_temp",
    "snmp_scan_function"    : lambda oid: oid("1.3.6.1.2.1.1.1.0").startswith('NetApp Release'),
    "snmp_info"             : ( ".1.3.6.1.4.1.789.1.21.1.2.1", ["9","5","21","25","27","26"] )
}

