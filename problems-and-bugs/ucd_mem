factory_settings["ucd_mem_default_levels"] = {
    "levels" : ("perc_used", (80.0, 90.0))
}


def inventory_ucd_mem(info):
    if info and len(info[0]) > 1:
        for line in info[0]:
            if line == "":
                return []
        return [ (None, {}) ]


def check_ucd_mem(_no_item, params, info):
    mem_total_bytes, mem_avail_bytes = \
        map(lambda x: int(x.replace("kB", "").strip()) * 1024, info[0])
    mem_used_bytes = mem_total_bytes - mem_avail_bytes
    return check_memory_simple(mem_used_bytes, mem_total_bytes, params)


check_info['ucd_mem'] = {
    'inventory_function'        : inventory_ucd_mem,
    'check_function'            : check_ucd_mem,
    'service_description'       : 'Memory',
    'has_perfdata'              : True,
    'snmp_info'                 : (".1.3.6.1.4.1.2021.4", [
                                        "5",    # memTotal     -> kB
                                        "6",    # memAvailable -> kB
                                  ]),
    'snmp_scan_function'        : lambda oid: \
                                  "pfsense" in oid(".1.3.6.1.2.1.1.1.0").lower() or \
                                  prefer_hr_scan_function(oid),
    'default_levels_variable'   : 'ucd_mem_default_levels',
    'group'                     : 'memory_simple',
    'includes'                  : [ "ucd.include", "memory.include" ],
}
